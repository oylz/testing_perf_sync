// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: vctn.proto

#include "vctn.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

extern PROTOBUF_INTERNAL_EXPORT_vctn_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_route_value_col_vctn_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_vctn_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_vct_pos_vctn_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_vctn_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_vct_value_n_vctn_2eproto;
namespace vctn {
class vct_posDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<vct_pos> _instance;
} _vct_pos_default_instance_;
class vct_value_nDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<vct_value_n> _instance;
} _vct_value_n_default_instance_;
class vct_valueDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<vct_value> _instance;
} _vct_value_default_instance_;
class keytable_valueDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<keytable_value> _instance;
} _keytable_value_default_instance_;
class route_value_colDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<route_value_col> _instance;
} _route_value_col_default_instance_;
class route_valueDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<route_value> _instance;
} _route_value_default_instance_;
}  // namespace vctn
static void InitDefaultsvct_pos_vctn_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::vctn::_vct_pos_default_instance_;
    new (ptr) ::vctn::vct_pos();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::vctn::vct_pos::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_vct_pos_vctn_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsvct_pos_vctn_2eproto}, {}};

static void InitDefaultsvct_value_n_vctn_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::vctn::_vct_value_n_default_instance_;
    new (ptr) ::vctn::vct_value_n();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::vctn::vct_value_n::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_vct_value_n_vctn_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsvct_value_n_vctn_2eproto}, {
      &scc_info_vct_pos_vctn_2eproto.base,}};

static void InitDefaultsvct_value_vctn_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::vctn::_vct_value_default_instance_;
    new (ptr) ::vctn::vct_value();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::vctn::vct_value::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_vct_value_vctn_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsvct_value_vctn_2eproto}, {
      &scc_info_vct_value_n_vctn_2eproto.base,}};

static void InitDefaultskeytable_value_vctn_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::vctn::_keytable_value_default_instance_;
    new (ptr) ::vctn::keytable_value();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::vctn::keytable_value::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_keytable_value_vctn_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultskeytable_value_vctn_2eproto}, {}};

static void InitDefaultsroute_value_col_vctn_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::vctn::_route_value_col_default_instance_;
    new (ptr) ::vctn::route_value_col();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::vctn::route_value_col::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_route_value_col_vctn_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsroute_value_col_vctn_2eproto}, {}};

static void InitDefaultsroute_value_vctn_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::vctn::_route_value_default_instance_;
    new (ptr) ::vctn::route_value();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::vctn::route_value::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_route_value_vctn_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsroute_value_vctn_2eproto}, {
      &scc_info_route_value_col_vctn_2eproto.base,}};

void InitDefaults_vctn_2eproto() {
  ::google::protobuf::internal::InitSCC(&scc_info_vct_pos_vctn_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_vct_value_n_vctn_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_vct_value_vctn_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_keytable_value_vctn_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_route_value_col_vctn_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_route_value_vctn_2eproto.base);
}

::google::protobuf::Metadata file_level_metadata_vctn_2eproto[6];
constexpr ::google::protobuf::EnumDescriptor const** file_level_enum_descriptors_vctn_2eproto = nullptr;
constexpr ::google::protobuf::ServiceDescriptor const** file_level_service_descriptors_vctn_2eproto = nullptr;

const ::google::protobuf::uint32 TableStruct_vctn_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::vctn::vct_pos, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::vctn::vct_pos, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::vctn::vct_pos, posm__),
  PROTOBUF_FIELD_OFFSET(::vctn::vct_pos, poss__),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::vctn::vct_value_n, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::vctn::vct_value_n, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::vctn::vct_value_n, pos__),
  PROTOBUF_FIELD_OFFSET(::vctn::vct_value_n, a__),
  PROTOBUF_FIELD_OFFSET(::vctn::vct_value_n, b__),
  PROTOBUF_FIELD_OFFSET(::vctn::vct_value_n, commit__),
  0,
  1,
  2,
  3,
  PROTOBUF_FIELD_OFFSET(::vctn::vct_value, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::vctn::vct_value, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::vctn::vct_value, key__),
  PROTOBUF_FIELD_OFFSET(::vctn::vct_value, main__),
  PROTOBUF_FIELD_OFFSET(::vctn::vct_value, his__),
  PROTOBUF_FIELD_OFFSET(::vctn::vct_value, commit_count__),
  0,
  1,
  ~0u,
  2,
  PROTOBUF_FIELD_OFFSET(::vctn::keytable_value, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::vctn::keytable_value, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::vctn::keytable_value, field__),
  PROTOBUF_FIELD_OFFSET(::vctn::keytable_value, route_table__),
  PROTOBUF_FIELD_OFFSET(::vctn::keytable_value, route_table_field__),
  0,
  1,
  2,
  PROTOBUF_FIELD_OFFSET(::vctn::route_value_col, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::vctn::route_value_col, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::vctn::route_value_col, name__),
  PROTOBUF_FIELD_OFFSET(::vctn::route_value_col, value__),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::vctn::route_value, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::vctn::route_value, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::vctn::route_value, region__),
  PROTOBUF_FIELD_OFFSET(::vctn::route_value, area__),
  PROTOBUF_FIELD_OFFSET(::vctn::route_value, col__),
  0,
  1,
  ~0u,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 7, sizeof(::vctn::vct_pos)},
  { 9, 18, sizeof(::vctn::vct_value_n)},
  { 22, 31, sizeof(::vctn::vct_value)},
  { 35, 43, sizeof(::vctn::keytable_value)},
  { 46, 53, sizeof(::vctn::route_value_col)},
  { 55, 63, sizeof(::vctn::route_value)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::vctn::_vct_pos_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::vctn::_vct_value_n_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::vctn::_vct_value_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::vctn::_keytable_value_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::vctn::_route_value_col_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::vctn::_route_value_default_instance_),
};

::google::protobuf::internal::AssignDescriptorsTable assign_descriptors_table_vctn_2eproto = {
  {}, AddDescriptors_vctn_2eproto, "vctn.proto", schemas,
  file_default_instances, TableStruct_vctn_2eproto::offsets,
  file_level_metadata_vctn_2eproto, 6, file_level_enum_descriptors_vctn_2eproto, file_level_service_descriptors_vctn_2eproto,
};

const char descriptor_table_protodef_vctn_2eproto[] =
  "\n\nvctn.proto\022\004vctn\"\'\n\007vct_pos\022\r\n\005posm_\030\001"
  " \002(\003\022\r\n\005poss_\030\002 \002(\003\"S\n\013vct_value_n\022\033\n\004po"
  "s_\030\001 \002(\0132\r.vctn.vct_pos\022\n\n\002a_\030\002 \002(\003\022\n\n\002b"
  "_\030\003 \002(\003\022\017\n\007commit_\030\005 \002(\010\"s\n\tvct_value\022\014\n"
  "\004key_\030\001 \002(\t\022 \n\005main_\030\002 \002(\0132\021.vctn.vct_va"
  "lue_n\022\037\n\004his_\030\003 \003(\0132\021.vctn.vct_value_n\022\025"
  "\n\rcommit_count_\030\004 \002(\003\"R\n\016keytable_value\022"
  "\016\n\006field_\030\001 \002(\t\022\024\n\014route_table_\030\002 \002(\t\022\032\n"
  "\022route_table_field_\030\003 \002(\t\"0\n\017route_value"
  "_col\022\r\n\005name_\030\001 \002(\t\022\016\n\006value_\030\002 \002(\t\"R\n\013r"
  "oute_value\022\017\n\007region_\030\001 \002(\t\022\r\n\005area_\030\002 \002"
  "(\t\022#\n\004col_\030\003 \003(\0132\025.vctn.route_value_col"
  ;
::google::protobuf::internal::DescriptorTable descriptor_table_vctn_2eproto = {
  false, InitDefaults_vctn_2eproto, 
  descriptor_table_protodef_vctn_2eproto,
  "vctn.proto", &assign_descriptors_table_vctn_2eproto, 479,
};

void AddDescriptors_vctn_2eproto() {
  static constexpr ::google::protobuf::internal::InitFunc deps[1] =
  {
  };
 ::google::protobuf::internal::AddDescriptors(&descriptor_table_vctn_2eproto, deps, 0);
}

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_vctn_2eproto = []() { AddDescriptors_vctn_2eproto(); return true; }();
namespace vctn {

// ===================================================================

void vct_pos::InitAsDefaultInstance() {
}
class vct_pos::HasBitSetters {
 public:
  static void set_has_posm_(vct_pos* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_poss_(vct_pos* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int vct_pos::kPosmFieldNumber;
const int vct_pos::kPossFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

vct_pos::vct_pos()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:vctn.vct_pos)
}
vct_pos::vct_pos(const vct_pos& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&posm__, &from.posm__,
    static_cast<size_t>(reinterpret_cast<char*>(&poss__) -
    reinterpret_cast<char*>(&posm__)) + sizeof(poss__));
  // @@protoc_insertion_point(copy_constructor:vctn.vct_pos)
}

void vct_pos::SharedCtor() {
  ::memset(&posm__, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&poss__) -
      reinterpret_cast<char*>(&posm__)) + sizeof(poss__));
}

vct_pos::~vct_pos() {
  // @@protoc_insertion_point(destructor:vctn.vct_pos)
  SharedDtor();
}

void vct_pos::SharedDtor() {
}

void vct_pos::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const vct_pos& vct_pos::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_vct_pos_vctn_2eproto.base);
  return *internal_default_instance();
}


void vct_pos::Clear() {
// @@protoc_insertion_point(message_clear_start:vctn.vct_pos)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&posm__, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&poss__) -
        reinterpret_cast<char*>(&posm__)) + sizeof(poss__));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* vct_pos::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<vct_pos*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // required int64 posm_ = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_posm_(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // required int64 poss_ = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_poss_(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool vct_pos::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:vctn.vct_pos)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int64 posm_ = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_posm_(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &posm__)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int64 poss_ = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_poss_(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &poss__)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:vctn.vct_pos)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:vctn.vct_pos)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void vct_pos::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:vctn.vct_pos)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int64 posm_ = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->posm_(), output);
  }

  // required int64 poss_ = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->poss_(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:vctn.vct_pos)
}

::google::protobuf::uint8* vct_pos::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:vctn.vct_pos)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int64 posm_ = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->posm_(), target);
  }

  // required int64 poss_ = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->poss_(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:vctn.vct_pos)
  return target;
}

size_t vct_pos::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:vctn.vct_pos)
  size_t total_size = 0;

  if (has_posm_()) {
    // required int64 posm_ = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->posm_());
  }

  if (has_poss_()) {
    // required int64 poss_ = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->poss_());
  }

  return total_size;
}
size_t vct_pos::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:vctn.vct_pos)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int64 posm_ = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->posm_());

    // required int64 poss_ = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->poss_());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void vct_pos::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:vctn.vct_pos)
  GOOGLE_DCHECK_NE(&from, this);
  const vct_pos* source =
      ::google::protobuf::DynamicCastToGenerated<vct_pos>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:vctn.vct_pos)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:vctn.vct_pos)
    MergeFrom(*source);
  }
}

void vct_pos::MergeFrom(const vct_pos& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:vctn.vct_pos)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      posm__ = from.posm__;
    }
    if (cached_has_bits & 0x00000002u) {
      poss__ = from.poss__;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void vct_pos::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:vctn.vct_pos)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void vct_pos::CopyFrom(const vct_pos& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:vctn.vct_pos)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool vct_pos::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void vct_pos::Swap(vct_pos* other) {
  if (other == this) return;
  InternalSwap(other);
}
void vct_pos::InternalSwap(vct_pos* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(posm__, other->posm__);
  swap(poss__, other->poss__);
}

::google::protobuf::Metadata vct_pos::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_vctn_2eproto);
  return ::file_level_metadata_vctn_2eproto[kIndexInFileMessages];
}


// ===================================================================

void vct_value_n::InitAsDefaultInstance() {
  ::vctn::_vct_value_n_default_instance_._instance.get_mutable()->pos__ = const_cast< ::vctn::vct_pos*>(
      ::vctn::vct_pos::internal_default_instance());
}
class vct_value_n::HasBitSetters {
 public:
  static const ::vctn::vct_pos& pos_(const vct_value_n* msg);
  static void set_has_pos_(vct_value_n* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_a_(vct_value_n* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_b_(vct_value_n* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
  static void set_has_commit_(vct_value_n* msg) {
    msg->_has_bits_[0] |= 0x00000008u;
  }
};

const ::vctn::vct_pos&
vct_value_n::HasBitSetters::pos_(const vct_value_n* msg) {
  return *msg->pos__;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int vct_value_n::kPosFieldNumber;
const int vct_value_n::kAFieldNumber;
const int vct_value_n::kBFieldNumber;
const int vct_value_n::kCommitFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

vct_value_n::vct_value_n()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:vctn.vct_value_n)
}
vct_value_n::vct_value_n(const vct_value_n& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_pos_()) {
    pos__ = new ::vctn::vct_pos(*from.pos__);
  } else {
    pos__ = nullptr;
  }
  ::memcpy(&a__, &from.a__,
    static_cast<size_t>(reinterpret_cast<char*>(&commit__) -
    reinterpret_cast<char*>(&a__)) + sizeof(commit__));
  // @@protoc_insertion_point(copy_constructor:vctn.vct_value_n)
}

void vct_value_n::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_vct_value_n_vctn_2eproto.base);
  ::memset(&pos__, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&commit__) -
      reinterpret_cast<char*>(&pos__)) + sizeof(commit__));
}

vct_value_n::~vct_value_n() {
  // @@protoc_insertion_point(destructor:vctn.vct_value_n)
  SharedDtor();
}

void vct_value_n::SharedDtor() {
  if (this != internal_default_instance()) delete pos__;
}

void vct_value_n::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const vct_value_n& vct_value_n::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_vct_value_n_vctn_2eproto.base);
  return *internal_default_instance();
}


void vct_value_n::Clear() {
// @@protoc_insertion_point(message_clear_start:vctn.vct_value_n)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(pos__ != nullptr);
    pos__->Clear();
  }
  if (cached_has_bits & 0x0000000eu) {
    ::memset(&a__, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&commit__) -
        reinterpret_cast<char*>(&a__)) + sizeof(commit__));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* vct_value_n::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<vct_value_n*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // required .vctn.vct_pos pos_ = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::vctn::vct_pos::_InternalParse;
        object = msg->mutable_pos_();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // required int64 a_ = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_a_(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // required int64 b_ = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_b_(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // required bool commit_ = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 40) goto handle_unusual;
        msg->set_commit_(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool vct_value_n::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:vctn.vct_value_n)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .vctn.vct_pos pos_ = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pos_()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int64 a_ = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_a_(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &a__)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int64 b_ = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_b_(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &b__)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bool commit_ = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (40 & 0xFF)) {
          HasBitSetters::set_has_commit_(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &commit__)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:vctn.vct_value_n)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:vctn.vct_value_n)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void vct_value_n::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:vctn.vct_value_n)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .vctn.vct_pos pos_ = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::pos_(this), output);
  }

  // required int64 a_ = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->a_(), output);
  }

  // required int64 b_ = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->b_(), output);
  }

  // required bool commit_ = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->commit_(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:vctn.vct_value_n)
}

::google::protobuf::uint8* vct_value_n::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:vctn.vct_value_n)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .vctn.vct_pos pos_ = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::pos_(this), target);
  }

  // required int64 a_ = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->a_(), target);
  }

  // required int64 b_ = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->b_(), target);
  }

  // required bool commit_ = 5;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->commit_(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:vctn.vct_value_n)
  return target;
}

size_t vct_value_n::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:vctn.vct_value_n)
  size_t total_size = 0;

  if (has_pos_()) {
    // required .vctn.vct_pos pos_ = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *pos__);
  }

  if (has_a_()) {
    // required int64 a_ = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->a_());
  }

  if (has_b_()) {
    // required int64 b_ = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->b_());
  }

  if (has_commit_()) {
    // required bool commit_ = 5;
    total_size += 1 + 1;
  }

  return total_size;
}
size_t vct_value_n::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:vctn.vct_value_n)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000000f) ^ 0x0000000f) == 0) {  // All required fields are present.
    // required .vctn.vct_pos pos_ = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *pos__);

    // required int64 a_ = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->a_());

    // required int64 b_ = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->b_());

    // required bool commit_ = 5;
    total_size += 1 + 1;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void vct_value_n::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:vctn.vct_value_n)
  GOOGLE_DCHECK_NE(&from, this);
  const vct_value_n* source =
      ::google::protobuf::DynamicCastToGenerated<vct_value_n>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:vctn.vct_value_n)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:vctn.vct_value_n)
    MergeFrom(*source);
  }
}

void vct_value_n::MergeFrom(const vct_value_n& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:vctn.vct_value_n)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      mutable_pos_()->::vctn::vct_pos::MergeFrom(from.pos_());
    }
    if (cached_has_bits & 0x00000002u) {
      a__ = from.a__;
    }
    if (cached_has_bits & 0x00000004u) {
      b__ = from.b__;
    }
    if (cached_has_bits & 0x00000008u) {
      commit__ = from.commit__;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void vct_value_n::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:vctn.vct_value_n)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void vct_value_n::CopyFrom(const vct_value_n& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:vctn.vct_value_n)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool vct_value_n::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;
  if (has_pos_()) {
    if (!this->pos__->IsInitialized()) return false;
  }
  return true;
}

void vct_value_n::Swap(vct_value_n* other) {
  if (other == this) return;
  InternalSwap(other);
}
void vct_value_n::InternalSwap(vct_value_n* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(pos__, other->pos__);
  swap(a__, other->a__);
  swap(b__, other->b__);
  swap(commit__, other->commit__);
}

::google::protobuf::Metadata vct_value_n::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_vctn_2eproto);
  return ::file_level_metadata_vctn_2eproto[kIndexInFileMessages];
}


// ===================================================================

void vct_value::InitAsDefaultInstance() {
  ::vctn::_vct_value_default_instance_._instance.get_mutable()->main__ = const_cast< ::vctn::vct_value_n*>(
      ::vctn::vct_value_n::internal_default_instance());
}
class vct_value::HasBitSetters {
 public:
  static void set_has_key_(vct_value* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static const ::vctn::vct_value_n& main_(const vct_value* msg);
  static void set_has_main_(vct_value* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_commit_count_(vct_value* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
};

const ::vctn::vct_value_n&
vct_value::HasBitSetters::main_(const vct_value* msg) {
  return *msg->main__;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int vct_value::kKeyFieldNumber;
const int vct_value::kMainFieldNumber;
const int vct_value::kHisFieldNumber;
const int vct_value::kCommitCountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

vct_value::vct_value()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:vctn.vct_value)
}
vct_value::vct_value(const vct_value& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      his__(from.his__) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  key__.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_key_()) {
    key__.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key__);
  }
  if (from.has_main_()) {
    main__ = new ::vctn::vct_value_n(*from.main__);
  } else {
    main__ = nullptr;
  }
  commit_count__ = from.commit_count__;
  // @@protoc_insertion_point(copy_constructor:vctn.vct_value)
}

void vct_value::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_vct_value_vctn_2eproto.base);
  key__.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&main__, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&commit_count__) -
      reinterpret_cast<char*>(&main__)) + sizeof(commit_count__));
}

vct_value::~vct_value() {
  // @@protoc_insertion_point(destructor:vctn.vct_value)
  SharedDtor();
}

void vct_value::SharedDtor() {
  key__.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete main__;
}

void vct_value::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const vct_value& vct_value::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_vct_value_vctn_2eproto.base);
  return *internal_default_instance();
}


void vct_value::Clear() {
// @@protoc_insertion_point(message_clear_start:vctn.vct_value)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  his__.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      key__.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(main__ != nullptr);
      main__->Clear();
    }
  }
  commit_count__ = PROTOBUF_LONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* vct_value::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<vct_value*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // required string key_ = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("vctn.vct_value.key_");
        object = msg->mutable_key_();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // required .vctn.vct_value_n main_ = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::vctn::vct_value_n::_InternalParse;
        object = msg->mutable_main_();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // repeated .vctn.vct_value_n his_ = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::vctn::vct_value_n::_InternalParse;
          object = msg->add_his_();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 26 && (ptr += 1));
        break;
      }
      // required int64 commit_count_ = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        msg->set_commit_count_(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool vct_value::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:vctn.vct_value)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string key_ = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_key_()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->key_().data(), static_cast<int>(this->key_().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "vctn.vct_value.key_");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .vctn.vct_value_n main_ = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_main_()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .vctn.vct_value_n his_ = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_his_()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int64 commit_count_ = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {
          HasBitSetters::set_has_commit_count_(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &commit_count__)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:vctn.vct_value)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:vctn.vct_value)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void vct_value::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:vctn.vct_value)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string key_ = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->key_().data(), static_cast<int>(this->key_().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "vctn.vct_value.key_");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->key_(), output);
  }

  // required .vctn.vct_value_n main_ = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::main_(this), output);
  }

  // repeated .vctn.vct_value_n his_ = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->his__size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->his_(static_cast<int>(i)),
      output);
  }

  // required int64 commit_count_ = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->commit_count_(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:vctn.vct_value)
}

::google::protobuf::uint8* vct_value::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:vctn.vct_value)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string key_ = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->key_().data(), static_cast<int>(this->key_().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "vctn.vct_value.key_");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->key_(), target);
  }

  // required .vctn.vct_value_n main_ = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::main_(this), target);
  }

  // repeated .vctn.vct_value_n his_ = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->his__size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->his_(static_cast<int>(i)), target);
  }

  // required int64 commit_count_ = 4;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->commit_count_(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:vctn.vct_value)
  return target;
}

size_t vct_value::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:vctn.vct_value)
  size_t total_size = 0;

  if (has_key_()) {
    // required string key_ = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->key_());
  }

  if (has_main_()) {
    // required .vctn.vct_value_n main_ = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *main__);
  }

  if (has_commit_count_()) {
    // required int64 commit_count_ = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->commit_count_());
  }

  return total_size;
}
size_t vct_value::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:vctn.vct_value)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required string key_ = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->key_());

    // required .vctn.vct_value_n main_ = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *main__);

    // required int64 commit_count_ = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->commit_count_());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .vctn.vct_value_n his_ = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->his__size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->his_(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void vct_value::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:vctn.vct_value)
  GOOGLE_DCHECK_NE(&from, this);
  const vct_value* source =
      ::google::protobuf::DynamicCastToGenerated<vct_value>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:vctn.vct_value)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:vctn.vct_value)
    MergeFrom(*source);
  }
}

void vct_value::MergeFrom(const vct_value& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:vctn.vct_value)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  his__.MergeFrom(from.his__);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      key__.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key__);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_main_()->::vctn::vct_value_n::MergeFrom(from.main_());
    }
    if (cached_has_bits & 0x00000004u) {
      commit_count__ = from.commit_count__;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void vct_value::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:vctn.vct_value)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void vct_value::CopyFrom(const vct_value& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:vctn.vct_value)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool vct_value::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->his_())) return false;
  if (has_main_()) {
    if (!this->main__->IsInitialized()) return false;
  }
  return true;
}

void vct_value::Swap(vct_value* other) {
  if (other == this) return;
  InternalSwap(other);
}
void vct_value::InternalSwap(vct_value* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  CastToBase(&his__)->InternalSwap(CastToBase(&other->his__));
  key__.Swap(&other->key__, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(main__, other->main__);
  swap(commit_count__, other->commit_count__);
}

::google::protobuf::Metadata vct_value::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_vctn_2eproto);
  return ::file_level_metadata_vctn_2eproto[kIndexInFileMessages];
}


// ===================================================================

void keytable_value::InitAsDefaultInstance() {
}
class keytable_value::HasBitSetters {
 public:
  static void set_has_field_(keytable_value* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_route_table_(keytable_value* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_route_table_field_(keytable_value* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int keytable_value::kFieldFieldNumber;
const int keytable_value::kRouteTableFieldNumber;
const int keytable_value::kRouteTableFieldFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

keytable_value::keytable_value()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:vctn.keytable_value)
}
keytable_value::keytable_value(const keytable_value& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  field__.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_field_()) {
    field__.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.field__);
  }
  route_table__.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_route_table_()) {
    route_table__.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.route_table__);
  }
  route_table_field__.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_route_table_field_()) {
    route_table_field__.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.route_table_field__);
  }
  // @@protoc_insertion_point(copy_constructor:vctn.keytable_value)
}

void keytable_value::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_keytable_value_vctn_2eproto.base);
  field__.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  route_table__.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  route_table_field__.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

keytable_value::~keytable_value() {
  // @@protoc_insertion_point(destructor:vctn.keytable_value)
  SharedDtor();
}

void keytable_value::SharedDtor() {
  field__.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  route_table__.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  route_table_field__.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void keytable_value::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const keytable_value& keytable_value::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_keytable_value_vctn_2eproto.base);
  return *internal_default_instance();
}


void keytable_value::Clear() {
// @@protoc_insertion_point(message_clear_start:vctn.keytable_value)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      field__.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      route_table__.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      route_table_field__.ClearNonDefaultToEmptyNoArena();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* keytable_value::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<keytable_value*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // required string field_ = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("vctn.keytable_value.field_");
        object = msg->mutable_field_();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // required string route_table_ = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("vctn.keytable_value.route_table_");
        object = msg->mutable_route_table_();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // required string route_table_field_ = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("vctn.keytable_value.route_table_field_");
        object = msg->mutable_route_table_field_();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool keytable_value::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:vctn.keytable_value)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string field_ = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_field_()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->field_().data(), static_cast<int>(this->field_().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "vctn.keytable_value.field_");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string route_table_ = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_route_table_()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->route_table_().data(), static_cast<int>(this->route_table_().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "vctn.keytable_value.route_table_");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string route_table_field_ = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_route_table_field_()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->route_table_field_().data(), static_cast<int>(this->route_table_field_().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "vctn.keytable_value.route_table_field_");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:vctn.keytable_value)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:vctn.keytable_value)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void keytable_value::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:vctn.keytable_value)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string field_ = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field_().data(), static_cast<int>(this->field_().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "vctn.keytable_value.field_");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->field_(), output);
  }

  // required string route_table_ = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->route_table_().data(), static_cast<int>(this->route_table_().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "vctn.keytable_value.route_table_");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->route_table_(), output);
  }

  // required string route_table_field_ = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->route_table_field_().data(), static_cast<int>(this->route_table_field_().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "vctn.keytable_value.route_table_field_");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->route_table_field_(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:vctn.keytable_value)
}

::google::protobuf::uint8* keytable_value::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:vctn.keytable_value)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string field_ = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field_().data(), static_cast<int>(this->field_().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "vctn.keytable_value.field_");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->field_(), target);
  }

  // required string route_table_ = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->route_table_().data(), static_cast<int>(this->route_table_().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "vctn.keytable_value.route_table_");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->route_table_(), target);
  }

  // required string route_table_field_ = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->route_table_field_().data(), static_cast<int>(this->route_table_field_().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "vctn.keytable_value.route_table_field_");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->route_table_field_(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:vctn.keytable_value)
  return target;
}

size_t keytable_value::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:vctn.keytable_value)
  size_t total_size = 0;

  if (has_field_()) {
    // required string field_ = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->field_());
  }

  if (has_route_table_()) {
    // required string route_table_ = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->route_table_());
  }

  if (has_route_table_field_()) {
    // required string route_table_field_ = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->route_table_field_());
  }

  return total_size;
}
size_t keytable_value::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:vctn.keytable_value)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required string field_ = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->field_());

    // required string route_table_ = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->route_table_());

    // required string route_table_field_ = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->route_table_field_());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void keytable_value::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:vctn.keytable_value)
  GOOGLE_DCHECK_NE(&from, this);
  const keytable_value* source =
      ::google::protobuf::DynamicCastToGenerated<keytable_value>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:vctn.keytable_value)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:vctn.keytable_value)
    MergeFrom(*source);
  }
}

void keytable_value::MergeFrom(const keytable_value& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:vctn.keytable_value)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      field__.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.field__);
    }
    if (cached_has_bits & 0x00000002u) {
      _has_bits_[0] |= 0x00000002u;
      route_table__.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.route_table__);
    }
    if (cached_has_bits & 0x00000004u) {
      _has_bits_[0] |= 0x00000004u;
      route_table_field__.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.route_table_field__);
    }
  }
}

void keytable_value::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:vctn.keytable_value)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void keytable_value::CopyFrom(const keytable_value& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:vctn.keytable_value)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool keytable_value::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  return true;
}

void keytable_value::Swap(keytable_value* other) {
  if (other == this) return;
  InternalSwap(other);
}
void keytable_value::InternalSwap(keytable_value* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  field__.Swap(&other->field__, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  route_table__.Swap(&other->route_table__, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  route_table_field__.Swap(&other->route_table_field__, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata keytable_value::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_vctn_2eproto);
  return ::file_level_metadata_vctn_2eproto[kIndexInFileMessages];
}


// ===================================================================

void route_value_col::InitAsDefaultInstance() {
}
class route_value_col::HasBitSetters {
 public:
  static void set_has_name_(route_value_col* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_value_(route_value_col* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int route_value_col::kNameFieldNumber;
const int route_value_col::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

route_value_col::route_value_col()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:vctn.route_value_col)
}
route_value_col::route_value_col(const route_value_col& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name__.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name_()) {
    name__.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name__);
  }
  value__.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_value_()) {
    value__.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value__);
  }
  // @@protoc_insertion_point(copy_constructor:vctn.route_value_col)
}

void route_value_col::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_route_value_col_vctn_2eproto.base);
  name__.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value__.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

route_value_col::~route_value_col() {
  // @@protoc_insertion_point(destructor:vctn.route_value_col)
  SharedDtor();
}

void route_value_col::SharedDtor() {
  name__.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value__.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void route_value_col::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const route_value_col& route_value_col::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_route_value_col_vctn_2eproto.base);
  return *internal_default_instance();
}


void route_value_col::Clear() {
// @@protoc_insertion_point(message_clear_start:vctn.route_value_col)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      name__.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      value__.ClearNonDefaultToEmptyNoArena();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* route_value_col::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<route_value_col*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // required string name_ = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("vctn.route_value_col.name_");
        object = msg->mutable_name_();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // required string value_ = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("vctn.route_value_col.value_");
        object = msg->mutable_value_();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool route_value_col::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:vctn.route_value_col)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string name_ = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name_()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name_().data(), static_cast<int>(this->name_().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "vctn.route_value_col.name_");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string value_ = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_value_()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->value_().data(), static_cast<int>(this->value_().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "vctn.route_value_col.value_");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:vctn.route_value_col)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:vctn.route_value_col)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void route_value_col::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:vctn.route_value_col)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string name_ = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name_().data(), static_cast<int>(this->name_().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "vctn.route_value_col.name_");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name_(), output);
  }

  // required string value_ = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->value_().data(), static_cast<int>(this->value_().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "vctn.route_value_col.value_");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->value_(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:vctn.route_value_col)
}

::google::protobuf::uint8* route_value_col::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:vctn.route_value_col)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string name_ = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name_().data(), static_cast<int>(this->name_().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "vctn.route_value_col.name_");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name_(), target);
  }

  // required string value_ = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->value_().data(), static_cast<int>(this->value_().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "vctn.route_value_col.value_");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->value_(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:vctn.route_value_col)
  return target;
}

size_t route_value_col::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:vctn.route_value_col)
  size_t total_size = 0;

  if (has_name_()) {
    // required string name_ = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name_());
  }

  if (has_value_()) {
    // required string value_ = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->value_());
  }

  return total_size;
}
size_t route_value_col::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:vctn.route_value_col)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string name_ = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name_());

    // required string value_ = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->value_());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void route_value_col::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:vctn.route_value_col)
  GOOGLE_DCHECK_NE(&from, this);
  const route_value_col* source =
      ::google::protobuf::DynamicCastToGenerated<route_value_col>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:vctn.route_value_col)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:vctn.route_value_col)
    MergeFrom(*source);
  }
}

void route_value_col::MergeFrom(const route_value_col& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:vctn.route_value_col)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      name__.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name__);
    }
    if (cached_has_bits & 0x00000002u) {
      _has_bits_[0] |= 0x00000002u;
      value__.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value__);
    }
  }
}

void route_value_col::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:vctn.route_value_col)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void route_value_col::CopyFrom(const route_value_col& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:vctn.route_value_col)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool route_value_col::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void route_value_col::Swap(route_value_col* other) {
  if (other == this) return;
  InternalSwap(other);
}
void route_value_col::InternalSwap(route_value_col* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  name__.Swap(&other->name__, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  value__.Swap(&other->value__, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata route_value_col::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_vctn_2eproto);
  return ::file_level_metadata_vctn_2eproto[kIndexInFileMessages];
}


// ===================================================================

void route_value::InitAsDefaultInstance() {
}
class route_value::HasBitSetters {
 public:
  static void set_has_region_(route_value* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_area_(route_value* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int route_value::kRegionFieldNumber;
const int route_value::kAreaFieldNumber;
const int route_value::kColFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

route_value::route_value()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:vctn.route_value)
}
route_value::route_value(const route_value& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      col__(from.col__) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  region__.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_region_()) {
    region__.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.region__);
  }
  area__.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_area_()) {
    area__.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.area__);
  }
  // @@protoc_insertion_point(copy_constructor:vctn.route_value)
}

void route_value::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_route_value_vctn_2eproto.base);
  region__.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  area__.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

route_value::~route_value() {
  // @@protoc_insertion_point(destructor:vctn.route_value)
  SharedDtor();
}

void route_value::SharedDtor() {
  region__.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  area__.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void route_value::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const route_value& route_value::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_route_value_vctn_2eproto.base);
  return *internal_default_instance();
}


void route_value::Clear() {
// @@protoc_insertion_point(message_clear_start:vctn.route_value)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  col__.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      region__.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      area__.ClearNonDefaultToEmptyNoArena();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* route_value::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<route_value*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // required string region_ = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("vctn.route_value.region_");
        object = msg->mutable_region_();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // required string area_ = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("vctn.route_value.area_");
        object = msg->mutable_area_();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // repeated .vctn.route_value_col col_ = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::vctn::route_value_col::_InternalParse;
          object = msg->add_col_();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 26 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool route_value::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:vctn.route_value)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string region_ = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_region_()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->region_().data(), static_cast<int>(this->region_().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "vctn.route_value.region_");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string area_ = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_area_()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->area_().data(), static_cast<int>(this->area_().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "vctn.route_value.area_");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .vctn.route_value_col col_ = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_col_()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:vctn.route_value)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:vctn.route_value)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void route_value::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:vctn.route_value)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string region_ = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->region_().data(), static_cast<int>(this->region_().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "vctn.route_value.region_");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->region_(), output);
  }

  // required string area_ = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->area_().data(), static_cast<int>(this->area_().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "vctn.route_value.area_");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->area_(), output);
  }

  // repeated .vctn.route_value_col col_ = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->col__size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->col_(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:vctn.route_value)
}

::google::protobuf::uint8* route_value::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:vctn.route_value)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string region_ = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->region_().data(), static_cast<int>(this->region_().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "vctn.route_value.region_");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->region_(), target);
  }

  // required string area_ = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->area_().data(), static_cast<int>(this->area_().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "vctn.route_value.area_");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->area_(), target);
  }

  // repeated .vctn.route_value_col col_ = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->col__size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->col_(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:vctn.route_value)
  return target;
}

size_t route_value::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:vctn.route_value)
  size_t total_size = 0;

  if (has_region_()) {
    // required string region_ = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->region_());
  }

  if (has_area_()) {
    // required string area_ = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->area_());
  }

  return total_size;
}
size_t route_value::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:vctn.route_value)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string region_ = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->region_());

    // required string area_ = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->area_());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .vctn.route_value_col col_ = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->col__size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->col_(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void route_value::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:vctn.route_value)
  GOOGLE_DCHECK_NE(&from, this);
  const route_value* source =
      ::google::protobuf::DynamicCastToGenerated<route_value>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:vctn.route_value)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:vctn.route_value)
    MergeFrom(*source);
  }
}

void route_value::MergeFrom(const route_value& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:vctn.route_value)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  col__.MergeFrom(from.col__);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      region__.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.region__);
    }
    if (cached_has_bits & 0x00000002u) {
      _has_bits_[0] |= 0x00000002u;
      area__.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.area__);
    }
  }
}

void route_value::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:vctn.route_value)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void route_value::CopyFrom(const route_value& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:vctn.route_value)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool route_value::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->col_())) return false;
  return true;
}

void route_value::Swap(route_value* other) {
  if (other == this) return;
  InternalSwap(other);
}
void route_value::InternalSwap(route_value* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  CastToBase(&col__)->InternalSwap(CastToBase(&other->col__));
  region__.Swap(&other->region__, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  area__.Swap(&other->area__, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata route_value::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_vctn_2eproto);
  return ::file_level_metadata_vctn_2eproto[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace vctn
namespace google {
namespace protobuf {
template<> PROTOBUF_NOINLINE ::vctn::vct_pos* Arena::CreateMaybeMessage< ::vctn::vct_pos >(Arena* arena) {
  return Arena::CreateInternal< ::vctn::vct_pos >(arena);
}
template<> PROTOBUF_NOINLINE ::vctn::vct_value_n* Arena::CreateMaybeMessage< ::vctn::vct_value_n >(Arena* arena) {
  return Arena::CreateInternal< ::vctn::vct_value_n >(arena);
}
template<> PROTOBUF_NOINLINE ::vctn::vct_value* Arena::CreateMaybeMessage< ::vctn::vct_value >(Arena* arena) {
  return Arena::CreateInternal< ::vctn::vct_value >(arena);
}
template<> PROTOBUF_NOINLINE ::vctn::keytable_value* Arena::CreateMaybeMessage< ::vctn::keytable_value >(Arena* arena) {
  return Arena::CreateInternal< ::vctn::keytable_value >(arena);
}
template<> PROTOBUF_NOINLINE ::vctn::route_value_col* Arena::CreateMaybeMessage< ::vctn::route_value_col >(Arena* arena) {
  return Arena::CreateInternal< ::vctn::route_value_col >(arena);
}
template<> PROTOBUF_NOINLINE ::vctn::route_value* Arena::CreateMaybeMessage< ::vctn::route_value >(Arena* arena) {
  return Arena::CreateInternal< ::vctn::route_value >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
